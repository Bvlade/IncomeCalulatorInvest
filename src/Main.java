import java.util.Scanner;

public class Main {    //описание исходных/начальных переменных

    //экстремумы по доходам компании
    private static int minIncome = 200000;  //(приватная статическая целочисленная переменная)
    private static int maxIncome = 900000;

    //расходы на компанию
    //аренда офиса
    private static int officeRentCharge = 140000;
    //затраты на телефонию
    private static int telephonyCharge = 12000;
    //затраты на интернет
    private static int internetAccessCharge = 7200;

    //зарплаты помощника и финансового менеждера
    private static int assistantSalary = 45000;
    private static int financeManagerSalary = 90000;

    //налоговая ставка
    private static double mainTaxPercent = 0.24;
    //надбавка менеджеру
    private static double managerPercent = 0.15;

    //минимальная сумма инвестиций
    private static double minInvestmentsAmount = 100000;
    //конец описания переменных

    public static void main(String[] args) {
        while (true) { //ввод с консоли суммы доходов компании за месяц
            System.out.println("Введите сумму доходов компании за месяц " +
                    "(от 200 до 900 тысяч рублей): ");

            //программа ожидает ввод с консоли суммы доходов компании за месяц
            int income = (new Scanner(System.in)).nextInt(); //сумма присваивается целочисленной переменной income

/*          если введённая сумма не удовлетворяет интервалу от 200 до 900 тысяч рублей в случае возврата значения ЛОЖЬ
            (значение ЛОЖЬ, затем преобразуется в значение ИСТИНА с помощью оператора "!") то программа выполянет
            переход в начало цикла (с помощью оператора continue) для ожидания повторного ввода в консоль суммы
            (так будет выполняться до тех пор пока не будет удовлетворено условие от 200 до 900 тысяч рублей).
            Данная проверка введённого значения (суммы дохода) на ИСТИНА или ЛОЖЬ выполняется с помощью приватной
            статической логической переменной checkIncomeRange которая объявляется в программе вне тела метода main.
*/          if (!checkIncomeRange(income)) {
                continue;
            }

/*          с этого места программа продолжает работу в случае возврата переменной checkIncomeRange значения ИСТИНА
            (значение ИСТИНА, которое затем преобразуется в значение ЛОЖЬ с помощью оператора "!" и, в таком случае,
             оператор continue не выполняется)
*/
            double managerSalary = income * managerPercent; // вычисляется зарплата менеджера

            //вычисляется чистый доход. Переменная calculateFixedCharges() объявляется в программе вне тела метода main
            double pureIncome = income - managerSalary - calculateFixedCharges();
            double taxAmount = mainTaxPercent * pureIncome; //вычисляется общая сумма налогов
            double pureIncomeAfterTax = pureIncome - taxAmount; //вычисляется оставшаяся общая сумма после налогов

/*          объявляется логическая переменная canMakeInvestments для хранения значения опеределения возможности
            инвестиций. Значение ИСТИНА принимается в том случае, если Чистый доход после налогов больше либо равен
            Минимальной сумме инвестиций
*/          boolean canMakeInvestments = pureIncomeAfterTax >=
                    minInvestmentsAmount;

            //вывод в консоль Зарплаты менеджера
            System.out.println("Зарплата менеджера: " + managerSalary);

            //вывод в консоль Общей суммы налогов,
            System.out.println("Общая сумма налогов: " +

/*                  и, если (taxAmount > 0) принимает значение ИСТИНА,  то дополнительно выводится значение переменной
                    taxAmount, если ЛОЖЬ то выводится значение 0. (согласно тернарному оператору)
*/                  (taxAmount > 0 ? taxAmount : 0));

            //вывод в консоль Компания может инвестировать:
            System.out.println("Компания может инвестировать: " +

                    //canMakeInvestments = ИСТИНА то дополнительно выводится "да". Иначе дополнительно выводится "нет"
                    (canMakeInvestments ? "да" : "нет"));

            // если Чистый доход меньше 0, то выводится сообщение - Бюджет в минусе! Нужно срочно зарабатывать!
            if (pureIncome < 0) {
                System.out.println("Бюджет в минусе! Нужно срочно зарабатывать!");
            }
            //программа возвращается к новому запросу доходов
        }
    }

    /*  здесь производится проверка выполнения условия ввода с консоли суммы Дохода в интервале от 200 до 900 тысяч рублей.
        объявляется приватная статическая логическая переменная checkIncomeRange, которая принимает значения ИСТИНА или ЛОЖЬ
         после проведённых ниже вычислений.
     */ private static boolean checkIncomeRange(int income) { // изначально checkIncomeRange примнимает значение ИСТИНА при
        //любой введённой с консоли сумме Дохода

        //если Доход меньше нижней границы
        if (income < minIncome) {
            System.out.println("Доход меньше нижней границы");
            return false; //то checkIncomeRange меняет значение на ЛОЖЬ.
        }

        //если Доход больше верхней границы
        if (income > maxIncome) {
            System.out.println("Доход выше верхней границы");
            return false;    // то checkIncomeRange меняет значение ЛОЖЬ
        }

        //в остальном случае условие считается выполненным
        return true; //и переменная checkIncomeRange принимает значение ИСТИНА, (т.е. фактически остаётся такой, какой
        // была изначально).

    }

    //объявляется приватная статическая целочисленная переменная для подсчёта всех расходов компании. Возвращает
    // значение равное сумме всех расходов.
    private static int calculateFixedCharges() {
        return officeRentCharge + //на аренду
                telephonyCharge + // на телефонию
                internetAccessCharge + //на интернет
                assistantSalary + // на зарплату помощника
                financeManagerSalary; // на зарплату финансового менеджера
    }
}